   1               		.file	"Caterina.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.StartSketch,"ax",@progbits
  11               	.global	StartSketch
  13               	StartSketch:
  14               	.LFB12:
  15               		.file 1 "Caterina.c"
   1:Caterina.c    **** #define  INCLUDE_FROM_CATERINA_C
   2:Caterina.c    **** #include "Caterina.h"
   3:Caterina.c    **** #include "spi_flash.h"
   4:Caterina.c    **** #include "aes.h"
   5:Caterina.c    **** 
   6:Caterina.c    **** #include "util/delay.h"
   7:Caterina.c    **** 
   8:Caterina.c    **** /*-------------------------------------------------------------*
   9:Caterina.c    ****  *		Function prototypes			*
  10:Caterina.c    ****  *-------------------------------------------------------------*/
  11:Caterina.c    **** void Init(void);
  12:Caterina.c    **** bool line_checksum(void);
  13:Caterina.c    **** void EraseBootPage(void);
  14:Caterina.c    **** void crc8(uint8_t *crc, char data);
  15:Caterina.c    **** void SPI_FlashImage(void);
  16:Caterina.c    **** /***************************************************************************************/
  17:Caterina.c    **** 
  18:Caterina.c    **** static bool RunBootloader = true;
  19:Caterina.c    **** 
  20:Caterina.c    **** // StartSketch() is called to clean up our mess before passing execution to the sketch.
  21:Caterina.c    **** void StartSketch(void)
  22:Caterina.c    **** {
  16               		.loc 1 22 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  23:Caterina.c    **** 	cli();
  22               		.loc 1 23 0
  23               	/* #APP */
  24               	 ;  23 "Caterina.c" 1
  25 0000 F894      		cli
  26               	 ;  0 "" 2
  24:Caterina.c    **** 	/* Undo TIMER1 setup and clear the count before running the sketch */
  25:Caterina.c    **** 	TIMSK1 = 0;
  27               		.loc 1 25 0
  28               	/* #NOAPP */
  29 0002 1092 6F00 		sts 111,__zero_reg__
  26:Caterina.c    **** 	TCCR1B = 0;
  30               		.loc 1 26 0
  31 0006 1092 8100 		sts 129,__zero_reg__
  27:Caterina.c    **** 	
  28:Caterina.c    **** 	/* Relocate the interrupt vector table to the application section */
  29:Caterina.c    **** 	MCUCR = (1 << IVCE);
  32               		.loc 1 29 0
  33 000a 81E0      		ldi r24,lo8(1)
  34 000c 85BF      		out 0x35,r24
  30:Caterina.c    **** 	MCUCR = 0;
  35               		.loc 1 30 0
  36 000e 15BE      		out 0x35,__zero_reg__
  31:Caterina.c    **** 
  32:Caterina.c    **** 	L_LED_OFF();
  37               		.loc 1 32 0
  38 0010 4798      		cbi 0x8,7
  33:Caterina.c    **** 	TX_LED_OFF();
  39               		.loc 1 33 0
  40 0012 5D9A      		sbi 0xb,5
  34:Caterina.c    **** 	RX_LED_OFF();
  41               		.loc 1 34 0
  42 0014 289A      		sbi 0x5,0
  35:Caterina.c    **** 
  36:Caterina.c    **** 	/* jump to beginning of application space */
  37:Caterina.c    **** 	__asm__ volatile("jmp 0x0000");
  43               		.loc 1 37 0
  44               	/* #APP */
  45               	 ;  37 "Caterina.c" 1
  46 0016 0C94 0000 		jmp 0x0000
  47               	 ;  0 "" 2
  48               	/* epilogue start */
  38:Caterina.c    **** 	
  39:Caterina.c    **** }
  49               		.loc 1 39 0
  50               	/* #NOAPP */
  51 001a 0895      		ret
  52               		.cfi_endproc
  53               	.LFE12:
  55               		.section	.text.Init,"ax",@progbits
  56               	.global	Init
  58               	Init:
  59               	.LFB14:
  40:Caterina.c    **** 
  41:Caterina.c    **** /** Main program entry point. This routine configures the hardware required by the bootloader, then
  42:Caterina.c    ****  *  runs the bootloader processing routine until it times out or is instructed to exit.
  43:Caterina.c    ****  */
  44:Caterina.c    **** int main(void)
  45:Caterina.c    **** {
  46:Caterina.c    **** 
  47:Caterina.c    **** 	MCUSR = 0;							// clear all reset flags	
  48:Caterina.c    **** 
  49:Caterina.c    **** 	// Relocate the interrupt vector table to the bootloader section
  50:Caterina.c    **** 	MCUCR = (1 << IVCE);
  51:Caterina.c    **** 	MCUCR = (1 << IVSEL);
  52:Caterina.c    **** 		 	
  53:Caterina.c    **** 	LED_SETUP();
  54:Caterina.c    ****     TX_LED_OFF();
  55:Caterina.c    ****   RX_LED_OFF();
  56:Caterina.c    **** 	Init();
  57:Caterina.c    **** 
  58:Caterina.c    ****   uint8_t _update = FLASH_readByte(0x00);
  59:Caterina.c    **** 
  60:Caterina.c    ****   if(_update == UPDATE){
  61:Caterina.c    **** 	 while(RunBootloader){
  62:Caterina.c    ****       SPI_FlashImage();
  63:Caterina.c    **** 		  boot_rww_enable();
  64:Caterina.c    **** 	   }
  65:Caterina.c    ****   }
  66:Caterina.c    **** 	SPI_DISABLE;
  67:Caterina.c    **** 	StartSketch();
  68:Caterina.c    **** }
  69:Caterina.c    **** 
  70:Caterina.c    **** void Init(void){
  60               		.loc 1 70 0
  61               		.cfi_startproc
  62               	/* prologue: function */
  63               	/* frame size = 0 */
  64               	/* stack size = 0 */
  65               	.L__stack_usage = 0
  71:Caterina.c    **** 	strAddr = 0; 
  66               		.loc 1 71 0
  67 0000 1092 0000 		sts strAddr,__zero_reg__
  68 0004 1092 0000 		sts strAddr+1,__zero_reg__
  69 0008 1092 0000 		sts strAddr+2,__zero_reg__
  70 000c 1092 0000 		sts strAddr+3,__zero_reg__
  72:Caterina.c    **** 	current_byte = 0;
  71               		.loc 1 72 0
  72 0010 1092 0000 		sts current_byte+1,__zero_reg__
  73 0014 1092 0000 		sts current_byte,__zero_reg__
  73:Caterina.c    **** 	nextAddress  = 0;
  74               		.loc 1 73 0
  75 0018 1092 0000 		sts nextAddress+1,__zero_reg__
  76 001c 1092 0000 		sts nextAddress,__zero_reg__
  74:Caterina.c    **** 
  75:Caterina.c    **** 	memset(&buffer,0x00,sizeof(buffer));
  77               		.loc 1 75 0
  78 0020 E0E0      		ldi r30,lo8(buffer)
  79 0022 F0E0      		ldi r31,hi8(buffer)
  80 0024 80E2      		ldi r24,lo8(32)
  81 0026 DF01      		movw r26,r30
  82               		0:
  83 0028 1D92      		st X+,__zero_reg__
  84 002a 8A95      		dec r24
  85 002c 01F4      		brne 0b
  76:Caterina.c    **** 	SPI_ENABLE; 
  86               		.loc 1 76 0
  87 002e 8CB5      		in r24,0x2c
  88 0030 8065      		ori r24,lo8(80)
  89 0032 8CBD      		out 0x2c,r24
  77:Caterina.c    **** 	SPI_init();	
  90               		.loc 1 77 0
  91 0034 0E94 0000 		call SPI_init
  92               	.LVL0:
  78:Caterina.c    **** 
  79:Caterina.c    ****   AES_init_ctx_iv(&ctx, key, iv);
  93               		.loc 1 79 0
  94 0038 40E0      		ldi r20,lo8(iv)
  95 003a 50E0      		ldi r21,hi8(iv)
  96 003c 60E0      		ldi r22,lo8(key)
  97 003e 70E0      		ldi r23,hi8(key)
  98 0040 80E0      		ldi r24,lo8(ctx)
  99 0042 90E0      		ldi r25,hi8(ctx)
 100 0044 0C94 0000 		jmp AES_init_ctx_iv
 101               	.LVL1:
 102               		.cfi_endproc
 103               	.LFE14:
 105               		.section	.text.EraseBootPage,"ax",@progbits
 106               	.global	EraseBootPage
 108               	EraseBootPage:
 109               	.LFB16:
  80:Caterina.c    **** }
  81:Caterina.c    **** 
  82:Caterina.c    **** void SPI_FlashImage(void){
  83:Caterina.c    **** 
  84:Caterina.c    ****    	/* READ SIZE OF THE FIRMWARE */
  85:Caterina.c    ****     imagesize = ((FLASH_readByte((uint32_t)SECTOR_LENGTH(SECTOR_1_START_ADDRESS))) << 8) | ((FLASH_
  86:Caterina.c    ****     if (imagesize%2!=0) return; /* basic check that we got even # of bytes */
  87:Caterina.c    ****     strAddr = SECTOR_1_START_ADDRESS + SECTOR_OFFSET;
  88:Caterina.c    **** 	
  89:Caterina.c    ****     while(SECTOR_1_START_ADDRESS <= SECTOR_END_ADDRESS(SECTOR_1_START_ADDRESS)){
  90:Caterina.c    ****        read_data = FLASH_readByte(strAddr);
  91:Caterina.c    ****         if(read_data == 0xFF){
  92:Caterina.c    ****         	break;
  93:Caterina.c    ****         }
  94:Caterina.c    ****         Flash_readByteArray(buffer,strAddr + 0x01,read_data + 0x01);
  95:Caterina.c    **** 		    AES_CBC_decrypt_buffer(&ctx,(uint8_t *) &buffer[1], read_data - 0x01);
  96:Caterina.c    ****         if(!line_checksum()){
  97:Caterina.c    ****           	break;
  98:Caterina.c    ****         }    
  99:Caterina.c    ****         strAddr += (uint32_t) read_data + 0x02; 
 100:Caterina.c    ****     }
 101:Caterina.c    **** }
 102:Caterina.c    **** 
 103:Caterina.c    **** void EraseBootPage(void){
 110               		.loc 1 103 0
 111               		.cfi_startproc
 112               	/* prologue: function */
 113               	/* frame size = 0 */
 114               	/* stack size = 0 */
 115               	.L__stack_usage = 0
 116               	.LVL2:
 117               		.loc 1 103 0
 118 0000 F0E0      		ldi r31,0
 119 0002 E0E0      		ldi r30,0
 120               	.LBB2:
 104:Caterina.c    **** 	
 105:Caterina.c    **** 	for (uint32_t CurrFlashAddress = 0; CurrFlashAddress < BOOT_START_ADDR; CurrFlashAddress += SPM_PA
 106:Caterina.c    ****         boot_page_erase(CurrFlashAddress);
 121               		.loc 1 106 0
 122 0004 83E0      		ldi r24,lo8(3)
 107:Caterina.c    ****         boot_spm_busy_wait();
 108:Caterina.c    ****         boot_page_write(CurrFlashAddress);
 123               		.loc 1 108 0
 124 0006 95E0      		ldi r25,lo8(5)
 125               	.LVL3:
 126               	.L6:
 106:Caterina.c    ****         boot_spm_busy_wait();
 127               		.loc 1 106 0
 128               	/* #APP */
 129               	 ;  106 "Caterina.c" 1
 130 0008 8093 5700 		sts 87, r24
 131 000c E895      		spm
 132               		
 133               	 ;  0 "" 2
 134               	/* #NOAPP */
 135               	.L4:
 107:Caterina.c    ****         boot_spm_busy_wait();
 136               		.loc 1 107 0 discriminator 1
 137 000e 07B6      		in __tmp_reg__,0x37
 138 0010 00FC      		sbrc __tmp_reg__,0
 139 0012 00C0      		rjmp .L4
 140               		.loc 1 108 0
 141               	/* #APP */
 142               	 ;  108 "Caterina.c" 1
 143 0014 9093 5700 		sts 87, r25
 144 0018 E895      		spm
 145               		
 146               	 ;  0 "" 2
 147               	/* #NOAPP */
 148               	.L5:
 109:Caterina.c    ****         boot_spm_busy_wait();
 149               		.loc 1 109 0 discriminator 1
 150 001a 07B6      		in __tmp_reg__,0x37
 151 001c 00FC      		sbrc __tmp_reg__,0
 152 001e 00C0      		rjmp .L5
 153 0020 E058      		subi r30,-128
 154 0022 FF4F      		sbci r31,-1
 105:Caterina.c    ****         boot_page_erase(CurrFlashAddress);
 155               		.loc 1 105 0 discriminator 2
 156 0024 E115      		cp r30,__zero_reg__
 157 0026 20E7      		ldi r18,112
 158 0028 F207      		cpc r31,r18
 159 002a 01F4      		brne .L6
 160               	/* epilogue start */
 161               	.LBE2:
 110:Caterina.c    ****     }
 111:Caterina.c    **** }
 162               		.loc 1 111 0
 163 002c 0895      		ret
 164               		.cfi_endproc
 165               	.LFE16:
 167               		.section	.text.crc8,"ax",@progbits
 168               	.global	crc8
 170               	crc8:
 171               	.LFB17:
 112:Caterina.c    **** 
 113:Caterina.c    **** /* Calculate 8 bit crc */
 114:Caterina.c    **** void crc8(uint8_t *crc, char data)
 115:Caterina.c    **** {
 172               		.loc 1 115 0
 173               		.cfi_startproc
 174               	.LVL4:
 175               	/* prologue: function */
 176               	/* frame size = 0 */
 177               	/* stack size = 0 */
 178               	.L__stack_usage = 0
 179 0000 FC01      		movw r30,r24
 116:Caterina.c    ****   (*crc) ^= ((uint8_t) data);
 180               		.loc 1 116 0
 181 0002 9081      		ld r25,Z
 182 0004 6927      		eor r22,r25
 183               	.LVL5:
 184 0006 6083      		st Z,r22
 185               	/* epilogue start */
 117:Caterina.c    **** }
 186               		.loc 1 117 0
 187 0008 0895      		ret
 188               		.cfi_endproc
 189               	.LFE17:
 191               		.section	.text.line_checksum,"ax",@progbits
 192               	.global	line_checksum
 194               	line_checksum:
 195               	.LFB18:
 118:Caterina.c    **** 
 119:Caterina.c    **** bool line_checksum(void){
 196               		.loc 1 119 0
 197               		.cfi_startproc
 198               	/* prologue: function */
 199               	/* frame size = 0 */
 200               	/* stack size = 0 */
 201               	.L__stack_usage = 0
 202               	.LVL6:
 203               	.LBB7:
 120:Caterina.c    **** 
 121:Caterina.c    ****     uint8_t calculated_crc_line = 0;
 122:Caterina.c    ****     uint16_t b;
 123:Caterina.c    ****    /* the checksum is computed by taking the data length byte + 2 byte for address + data */
 124:Caterina.c    ****     for(uint8_t i = 1; i <= buffer[0]; i++){
 204               		.loc 1 124 0
 205 0000 2091 0000 		lds r18,buffer
 206               	.LBE7:
 121:Caterina.c    ****     uint16_t b;
 207               		.loc 1 121 0
 208 0004 90E0      		ldi r25,0
 209               	.LBB10:
 210               		.loc 1 124 0
 211 0006 81E0      		ldi r24,lo8(1)
 212               	.LVL7:
 213               	.L12:
 214               		.loc 1 124 0 is_stmt 0 discriminator 1
 215 0008 2817      		cp r18,r24
 216 000a 00F4      		brsh .L13
 217               	.LBE10:
 125:Caterina.c    ****         crc8(&calculated_crc_line,(uint8_t) buffer[i]);
 126:Caterina.c    ****     }
 127:Caterina.c    **** 
 128:Caterina.c    ****     if((uint8_t)buffer[17] != calculated_crc_line){
 218               		.loc 1 128 0 is_stmt 1
 219 000c 8091 0000 		lds r24,buffer+17
 220               	.LVL8:
 221 0010 8913      		cpse r24,r25
 222 0012 00C0      		rjmp .L21
 223               	.LBB11:
 129:Caterina.c    ****     		return false;	
 130:Caterina.c    ****     }else{
 131:Caterina.c    ****         for(uint8_t i = 1; i < buffer[0]; i+=2){
 224               		.loc 1 131 0
 225 0014 81E0      		ldi r24,lo8(1)
 132:Caterina.c    ****            
 133:Caterina.c    ****             b  = buffer[i] & 0xFF;
 134:Caterina.c    ****             b |= buffer[i + 1] << 8;
 135:Caterina.c    ****             boot_page_fill(current_byte,b);
 226               		.loc 1 135 0
 227 0016 41E0      		ldi r20,lo8(1)
 136:Caterina.c    ****             current_byte += 2;
 137:Caterina.c    ****        if ((current_byte%SPM_PAGESIZE==0 || current_byte==imagesize)){ 
 138:Caterina.c    ****          TX_LED_ON();
 139:Caterina.c    ****          // Write from programming buffer
 140:Caterina.c    ****          boot_page_write(nextAddress); //(current_byte+2-SPM_PAGESIZE)
 228               		.loc 1 140 0
 229 0018 55E0      		ldi r21,lo8(5)
 230               	.LVL9:
 231               	.L15:
 131:Caterina.c    ****            
 232               		.loc 1 131 0 discriminator 1
 233 001a 9091 0000 		lds r25,buffer
 234 001e 8917      		cp r24,r25
 235 0020 00F0      		brlo .L20
 236               	.LBE11:
 141:Caterina.c    ****          boot_spm_busy_wait();
 142:Caterina.c    ****          nextAddress += SPM_PAGESIZE;
 143:Caterina.c    ****          	TX_LED_OFF();
 144:Caterina.c    ****         if(current_byte == imagesize){ 
 145:Caterina.c    ****         	RunBootloader = false;  	
 146:Caterina.c    ****         	}
 147:Caterina.c    ****         }
 148:Caterina.c    ****       }
 149:Caterina.c    ****     }
 150:Caterina.c    **** 
 151:Caterina.c    ****     return true;
 237               		.loc 1 151 0
 238 0022 81E0      		ldi r24,lo8(1)
 239               	.LVL10:
 240               	.LBB12:
 241 0024 0895      		ret
 242               	.LVL11:
 243               	.L13:
 244               	.LBE12:
 245               	.LBB13:
 125:Caterina.c    ****     }
 246               		.loc 1 125 0 discriminator 3
 247 0026 E82F      		mov r30,r24
 248 0028 F0E0      		ldi r31,0
 249 002a E050      		subi r30,lo8(-(buffer))
 250 002c F040      		sbci r31,hi8(-(buffer))
 251               	.LBB8:
 252               	.LBB9:
 116:Caterina.c    **** }
 253               		.loc 1 116 0 discriminator 3
 254 002e 3081      		ld r19,Z
 255 0030 9327      		eor r25,r19
 256               	.LVL12:
 257               	.LBE9:
 258               	.LBE8:
 124:Caterina.c    ****         crc8(&calculated_crc_line,(uint8_t) buffer[i]);
 259               		.loc 1 124 0 discriminator 3
 260 0032 8F5F      		subi r24,lo8(-(1))
 261               	.LVL13:
 262 0034 00C0      		rjmp .L12
 263               	.LVL14:
 264               	.L20:
 265               	.LBE13:
 266               	.LBB14:
 133:Caterina.c    ****             b |= buffer[i + 1] << 8;
 267               		.loc 1 133 0
 268 0036 A82F      		mov r26,r24
 269 0038 B0E0      		ldi r27,0
 270 003a A050      		subi r26,lo8(-(buffer))
 271 003c B040      		sbci r27,hi8(-(buffer))
 272 003e 9C91      		ld r25,X
 273               	.LVL15:
 135:Caterina.c    ****             current_byte += 2;
 274               		.loc 1 135 0
 275 0040 E091 0000 		lds r30,current_byte
 276 0044 F091 0000 		lds r31,current_byte+1
 134:Caterina.c    ****             boot_page_fill(current_byte,b);
 277               		.loc 1 134 0
 278 0048 1196      		adiw r26,1
 279 004a 2C91      		ld r18,X
 280 004c 322F      		mov r19,r18
 281 004e 292F      		mov r18,r25
 135:Caterina.c    ****             current_byte += 2;
 282               		.loc 1 135 0
 283               	/* #APP */
 284               	 ;  135 "Caterina.c" 1
 285 0050 0901      		movw  r0, r18
 286 0052 4093 5700 		sts 87, r20
 287 0056 E895      		spm
 288 0058 1124      		clr  r1
 289               		
 290               	 ;  0 "" 2
 136:Caterina.c    ****        if ((current_byte%SPM_PAGESIZE==0 || current_byte==imagesize)){ 
 291               		.loc 1 136 0
 292               	/* #NOAPP */
 293 005a 3296      		adiw r30,2
 294 005c F093 0000 		sts current_byte+1,r31
 295 0060 E093 0000 		sts current_byte,r30
 137:Caterina.c    ****          TX_LED_ON();
 296               		.loc 1 137 0
 297 0064 9F01      		movw r18,r30
 298 0066 2F77      		andi r18,127
 299 0068 3327      		clr r19
 300 006a 232B      		or r18,r19
 301 006c 01F0      		breq .L16
 137:Caterina.c    ****          TX_LED_ON();
 302               		.loc 1 137 0 is_stmt 0 discriminator 1
 303 006e 2091 0000 		lds r18,imagesize
 304 0072 3091 0000 		lds r19,imagesize+1
 305 0076 E217      		cp r30,r18
 306 0078 F307      		cpc r31,r19
 307 007a 01F4      		brne .L17
 308               	.L16:
 138:Caterina.c    ****          // Write from programming buffer
 309               		.loc 1 138 0 is_stmt 1
 310 007c 5D98      		cbi 0xb,5
 140:Caterina.c    ****          boot_spm_busy_wait();
 311               		.loc 1 140 0
 312 007e E091 0000 		lds r30,nextAddress
 313 0082 F091 0000 		lds r31,nextAddress+1
 314               	/* #APP */
 315               	 ;  140 "Caterina.c" 1
 316 0086 5093 5700 		sts 87, r21
 317 008a E895      		spm
 318               		
 319               	 ;  0 "" 2
 320               	/* #NOAPP */
 321               	.L18:
 141:Caterina.c    ****          nextAddress += SPM_PAGESIZE;
 322               		.loc 1 141 0 discriminator 1
 323 008c 07B6      		in __tmp_reg__,0x37
 324 008e 00FC      		sbrc __tmp_reg__,0
 325 0090 00C0      		rjmp .L18
 142:Caterina.c    ****          	TX_LED_OFF();
 326               		.loc 1 142 0
 327 0092 E058      		subi r30,-128
 328 0094 FF4F      		sbci r31,-1
 329 0096 F093 0000 		sts nextAddress+1,r31
 330 009a E093 0000 		sts nextAddress,r30
 143:Caterina.c    ****         if(current_byte == imagesize){ 
 331               		.loc 1 143 0
 332 009e 5D9A      		sbi 0xb,5
 144:Caterina.c    ****         	RunBootloader = false;  	
 333               		.loc 1 144 0
 334 00a0 6091 0000 		lds r22,current_byte
 335 00a4 7091 0000 		lds r23,current_byte+1
 336 00a8 2091 0000 		lds r18,imagesize
 337 00ac 3091 0000 		lds r19,imagesize+1
 338 00b0 6217      		cp r22,r18
 339 00b2 7307      		cpc r23,r19
 340 00b4 01F4      		brne .L17
 145:Caterina.c    ****         	}
 341               		.loc 1 145 0
 342 00b6 1092 0000 		sts RunBootloader,__zero_reg__
 343               	.L17:
 131:Caterina.c    ****            
 344               		.loc 1 131 0 discriminator 2
 345 00ba 8E5F      		subi r24,lo8(-(2))
 346               	.LVL16:
 347 00bc 00C0      		rjmp .L15
 348               	.LVL17:
 349               	.L21:
 350               	.LBE14:
 129:Caterina.c    ****     }else{
 351               		.loc 1 129 0
 352 00be 80E0      		ldi r24,0
 353               	.LVL18:
 354               	/* epilogue start */
 152:Caterina.c    **** }...
 355               		.loc 1 152 0
 356 00c0 0895      		ret
 357               		.cfi_endproc
 358               	.LFE18:
 360               		.section	.text.SPI_FlashImage,"ax",@progbits
 361               	.global	SPI_FlashImage
 363               	SPI_FlashImage:
 364               	.LFB15:
  82:Caterina.c    **** void SPI_FlashImage(void){
 365               		.loc 1 82 0
 366               		.cfi_startproc
 367 0000 CF93      		push r28
 368               	.LCFI0:
 369               		.cfi_def_cfa_offset 3
 370               		.cfi_offset 28, -2
 371               	/* prologue: function */
 372               	/* frame size = 0 */
 373               	/* stack size = 1 */
 374               	.L__stack_usage = 1
  85:Caterina.c    ****     imagesize = ((FLASH_readByte((uint32_t)SECTOR_LENGTH(SECTOR_1_START_ADDRESS))) << 8) | ((FLASH_
 375               		.loc 1 85 0
 376 0002 63E0      		ldi r22,lo8(3)
 377 0004 70E2      		ldi r23,lo8(32)
 378 0006 80E0      		ldi r24,0
 379 0008 90E0      		ldi r25,0
 380 000a 0E94 0000 		call FLASH_readByte
 381               	.LVL19:
 382 000e C82F      		mov r28,r24
 383 0010 64E0      		ldi r22,lo8(4)
 384 0012 70E2      		ldi r23,lo8(32)
 385 0014 80E0      		ldi r24,0
 386 0016 90E0      		ldi r25,0
 387 0018 0E94 0000 		call FLASH_readByte
 388               	.LVL20:
 389 001c 9C2F      		mov r25,r28
 390 001e 9093 0000 		sts imagesize+1,r25
 391 0022 8093 0000 		sts imagesize,r24
  86:Caterina.c    ****     if (imagesize%2!=0) return; /* basic check that we got even # of bytes */
 392               		.loc 1 86 0
 393 0026 80FD      		sbrc r24,0
 394 0028 00C0      		rjmp .L26
  87:Caterina.c    ****     strAddr = SECTOR_1_START_ADDRESS + SECTOR_OFFSET;
 395               		.loc 1 87 0
 396 002a 85E0      		ldi r24,lo8(5)
 397 002c 90E2      		ldi r25,lo8(32)
 398 002e A0E0      		ldi r26,0
 399 0030 B0E0      		ldi r27,0
 400               	.L35:
 401 0032 8093 0000 		sts strAddr,r24
 402 0036 9093 0000 		sts strAddr+1,r25
 403 003a A093 0000 		sts strAddr+2,r26
 404 003e B093 0000 		sts strAddr+3,r27
  90:Caterina.c    ****        read_data = FLASH_readByte(strAddr);
 405               		.loc 1 90 0
 406 0042 6091 0000 		lds r22,strAddr
 407 0046 7091 0000 		lds r23,strAddr+1
 408 004a 8091 0000 		lds r24,strAddr+2
 409 004e 9091 0000 		lds r25,strAddr+3
 410 0052 0E94 0000 		call FLASH_readByte
 411               	.LVL21:
 412 0056 8093 0000 		sts read_data,r24
  91:Caterina.c    ****         if(read_data == 0xFF){
 413               		.loc 1 91 0
 414 005a 8F3F      		cpi r24,lo8(-1)
 415 005c 01F0      		breq .L26
  94:Caterina.c    ****         Flash_readByteArray(buffer,strAddr + 0x01,read_data + 0x01);
 416               		.loc 1 94 0
 417 005e 21E0      		ldi r18,lo8(1)
 418 0060 280F      		add r18,r24
 419 0062 4091 0000 		lds r20,strAddr
 420 0066 5091 0000 		lds r21,strAddr+1
 421 006a 6091 0000 		lds r22,strAddr+2
 422 006e 7091 0000 		lds r23,strAddr+3
 423 0072 4F5F      		subi r20,-1
 424 0074 5F4F      		sbci r21,-1
 425 0076 6F4F      		sbci r22,-1
 426 0078 7F4F      		sbci r23,-1
 427 007a 80E0      		ldi r24,lo8(buffer)
 428 007c 90E0      		ldi r25,hi8(buffer)
 429 007e 0E94 0000 		call Flash_readByteArray
 430               	.LVL22:
  95:Caterina.c    **** 		    AES_CBC_decrypt_buffer(&ctx,(uint8_t *) &buffer[1], read_data - 0x01);
 431               		.loc 1 95 0
 432 0082 2091 0000 		lds r18,read_data
 433 0086 2150      		subi r18,1
 434 0088 330B      		sbc r19,r19
 435 008a 032E      		mov __tmp_reg__,r19
 436 008c 000C      		lsl r0
 437 008e 440B      		sbc r20,r20
 438 0090 550B      		sbc r21,r21
 439 0092 60E0      		ldi r22,lo8(buffer+1)
 440 0094 70E0      		ldi r23,hi8(buffer+1)
 441 0096 80E0      		ldi r24,lo8(ctx)
 442 0098 90E0      		ldi r25,hi8(ctx)
 443 009a 0E94 0000 		call AES_CBC_decrypt_buffer
 444               	.LVL23:
  96:Caterina.c    ****         if(!line_checksum()){
 445               		.loc 1 96 0
 446 009e 0E94 0000 		call line_checksum
 447               	.LVL24:
 448 00a2 8823      		tst r24
 449 00a4 01F0      		breq .L26
  99:Caterina.c    ****         strAddr += (uint32_t) read_data + 0x02; 
 450               		.loc 1 99 0
 451 00a6 8091 0000 		lds r24,strAddr
 452 00aa 9091 0000 		lds r25,strAddr+1
 453 00ae A091 0000 		lds r26,strAddr+2
 454 00b2 B091 0000 		lds r27,strAddr+3
 455 00b6 0296      		adiw r24,2
 456 00b8 A11D      		adc r26,__zero_reg__
 457 00ba B11D      		adc r27,__zero_reg__
 458 00bc 2091 0000 		lds r18,read_data
 459 00c0 820F      		add r24,r18
 460 00c2 911D      		adc r25,__zero_reg__
 461 00c4 A11D      		adc r26,__zero_reg__
 462 00c6 B11D      		adc r27,__zero_reg__
 463 00c8 00C0      		rjmp .L35
 464               	.L26:
 465               	/* epilogue start */
 101:Caterina.c    **** }
 466               		.loc 1 101 0
 467 00ca CF91      		pop r28
 468 00cc 0895      		ret
 469               		.cfi_endproc
 470               	.LFE15:
 472               		.section	.text.startup.main,"ax",@progbits
 473               	.global	main
 475               	main:
 476               	.LFB13:
  45:Caterina.c    **** {
 477               		.loc 1 45 0
 478               		.cfi_startproc
 479 0000 CF93      		push r28
 480               	.LCFI1:
 481               		.cfi_def_cfa_offset 3
 482               		.cfi_offset 28, -2
 483               	/* prologue: function */
 484               	/* frame size = 0 */
 485               	/* stack size = 1 */
 486               	.L__stack_usage = 1
  47:Caterina.c    **** 	MCUSR = 0;							// clear all reset flags	
 487               		.loc 1 47 0
 488 0002 14BE      		out 0x34,__zero_reg__
  50:Caterina.c    **** 	MCUCR = (1 << IVCE);
 489               		.loc 1 50 0
 490 0004 81E0      		ldi r24,lo8(1)
 491 0006 85BF      		out 0x35,r24
  51:Caterina.c    **** 	MCUCR = (1 << IVSEL);
 492               		.loc 1 51 0
 493 0008 82E0      		ldi r24,lo8(2)
 494 000a 85BF      		out 0x35,r24
  53:Caterina.c    **** 	LED_SETUP();
 495               		.loc 1 53 0
 496 000c 3F9A      		sbi 0x7,7
 497 000e 209A      		sbi 0x4,0
 498 0010 559A      		sbi 0xa,5
 499 0012 3E9A      		sbi 0x7,6
 500 0014 579A      		sbi 0xa,7
  54:Caterina.c    ****     TX_LED_OFF();
 501               		.loc 1 54 0
 502 0016 5D9A      		sbi 0xb,5
  55:Caterina.c    ****   RX_LED_OFF();
 503               		.loc 1 55 0
 504 0018 289A      		sbi 0x5,0
  56:Caterina.c    **** 	Init();
 505               		.loc 1 56 0
 506 001a 0E94 0000 		call Init
 507               	.LVL25:
  58:Caterina.c    ****   uint8_t _update = FLASH_readByte(0x00);
 508               		.loc 1 58 0
 509 001e 60E0      		ldi r22,0
 510 0020 70E0      		ldi r23,0
 511 0022 CB01      		movw r24,r22
 512 0024 0E94 0000 		call FLASH_readByte
 513               	.LVL26:
  63:Caterina.c    **** 		  boot_rww_enable();
 514               		.loc 1 63 0
 515 0028 C1E1      		ldi r28,lo8(17)
  60:Caterina.c    ****   if(_update == UPDATE){
 516               		.loc 1 60 0
 517 002a 8434      		cpi r24,lo8(68)
 518 002c 01F0      		breq .L37
 519               	.LVL27:
 520               	.L39:
  66:Caterina.c    **** 	SPI_DISABLE;
 521               		.loc 1 66 0
 522 002e 8CB5      		in r24,0x2c
 523 0030 8F7B      		andi r24,lo8(-65)
 524 0032 8CBD      		out 0x2c,r24
  67:Caterina.c    **** 	StartSketch();
 525               		.loc 1 67 0
 526 0034 0E94 0000 		call StartSketch
 527               	.LVL28:
  68:Caterina.c    **** }
 528               		.loc 1 68 0
 529 0038 90E0      		ldi r25,0
 530 003a 80E0      		ldi r24,0
 531               	/* epilogue start */
 532 003c CF91      		pop r28
 533 003e 0895      		ret
 534               	.L38:
  62:Caterina.c    ****       SPI_FlashImage();
 535               		.loc 1 62 0
 536 0040 0E94 0000 		call SPI_FlashImage
 537               	.LVL29:
  63:Caterina.c    **** 		  boot_rww_enable();
 538               		.loc 1 63 0
 539               	/* #APP */
 540               	 ;  63 "Caterina.c" 1
 541 0044 C093 5700 		sts 87, r28
 542 0048 E895      		spm
 543               		
 544               	 ;  0 "" 2
 545               	/* #NOAPP */
 546               	.L37:
  61:Caterina.c    **** 	 while(RunBootloader){
 547               		.loc 1 61 0
 548 004a 8091 0000 		lds r24,RunBootloader
 549 004e 8111      		cpse r24,__zero_reg__
 550 0050 00C0      		rjmp .L38
 551 0052 00C0      		rjmp .L39
 552               		.cfi_endproc
 553               	.LFE13:
 555               		.data
 558               	RunBootloader:
 559 0000 01        		.byte	1
 560               		.comm	ctx,192,1
 561               		.comm	strAddr,4,1
 562               		.comm	read_data,1,1
 563               		.comm	nextAddress,2,1
 564               		.comm	current_byte,2,1
 565               		.comm	buffer,32,1
 566               		.comm	imagesize,2,1
 567               		.comm	firmware_length,2,1
 568               		.text
 569               	.Letext0:
 570               		.file 2 "/usr/avr/include/stdint.h"
 571               		.file 3 "Caterina.h"
 572               		.file 4 "aes.h"
 573               		.file 5 "spi_flash.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Caterina.c
     /tmp/cclKyHqD.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cclKyHqD.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cclKyHqD.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cclKyHqD.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cclKyHqD.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cclKyHqD.s:13     .text.StartSketch:0000000000000000 StartSketch
     /tmp/cclKyHqD.s:58     .text.Init:0000000000000000 Init
                            *COM*:0000000000000004 strAddr
                            *COM*:0000000000000002 current_byte
                            *COM*:0000000000000002 nextAddress
                            *COM*:0000000000000020 buffer
                            *COM*:00000000000000c0 ctx
     /tmp/cclKyHqD.s:108    .text.EraseBootPage:0000000000000000 EraseBootPage
     /tmp/cclKyHqD.s:170    .text.crc8:0000000000000000 crc8
     /tmp/cclKyHqD.s:194    .text.line_checksum:0000000000000000 line_checksum
                            *COM*:0000000000000002 imagesize
     /tmp/cclKyHqD.s:558    .data:0000000000000000 RunBootloader
     /tmp/cclKyHqD.s:363    .text.SPI_FlashImage:0000000000000000 SPI_FlashImage
                            *COM*:0000000000000001 read_data
     /tmp/cclKyHqD.s:475    .text.startup.main:0000000000000000 main
                            *COM*:0000000000000002 firmware_length

UNDEFINED SYMBOLS
SPI_init
iv
key
AES_init_ctx_iv
FLASH_readByte
Flash_readByteArray
AES_CBC_decrypt_buffer
__do_copy_data
__do_clear_bss
